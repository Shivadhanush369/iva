{"@programName":"ZAP","@version":"2.15.0","@generated":"Fri, 23 Aug 2024 11:50:17","site":[{"@name":"https://www.avekshaa.com","@host":"www.avekshaa.com","@port":"443","@ssl":"true","alerts":[{"pluginid":"10055","alertRef":"10055-4","alert":"CSP: Wildcard Directive","name":"CSP: Wildcard Directive","riskcode":"2","confidence":"3","riskdesc":"Medium (High)","desc":"<p>Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks. Including (but not limited to) Cross Site Scripting (XSS), and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page — covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.</p>","instances":[{"uri":"https://www.avekshaa.com/","method":"GET","param":"content-security-policy","attack":"","evidence":"upgrade-insecure-requests","otherinfo":"The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined: \nscript-src, style-src, img-src, connect-src, frame-src, frame-ancestors, font-src, media-src, object-src, manifest-src, worker-src, form-action\n\nThe directive(s): frame-ancestors, form-action are among the directives that do not fallback to default-src, missing/excluding them is the same as allowing anything."},{"uri":"https://www.avekshaa.com/robots.txt","method":"GET","param":"content-security-policy","attack":"","evidence":"upgrade-insecure-requests","otherinfo":"The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined: \nscript-src, style-src, img-src, connect-src, frame-src, frame-ancestors, font-src, media-src, object-src, manifest-src, worker-src, form-action\n\nThe directive(s): frame-ancestors, form-action are among the directives that do not fallback to default-src, missing/excluding them is the same as allowing anything."},{"uri":"https://www.avekshaa.com/sitemap.xml","method":"GET","param":"content-security-policy","attack":"","evidence":"upgrade-insecure-requests","otherinfo":"The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined: \nscript-src, style-src, img-src, connect-src, frame-src, frame-ancestors, font-src, media-src, object-src, manifest-src, worker-src, form-action\n\nThe directive(s): frame-ancestors, form-action are among the directives that do not fallback to default-src, missing/excluding them is the same as allowing anything."}],"count":"3","solution":"<p>Ensure that your web server, application server, load balancer, etc. is properly configured to set the Content-Security-Policy header.</p>","otherinfo":"<p>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined: </p><p>script-src, style-src, img-src, connect-src, frame-src, frame-ancestors, font-src, media-src, object-src, manifest-src, worker-src, form-action</p><p></p><p>The directive(s): frame-ancestors, form-action are among the directives that do not fallback to default-src, missing/excluding them is the same as allowing anything.</p>","reference":"<p>https://www.w3.org/TR/CSP/</p><p>https://caniuse.com/#search=content+security+policy</p><p>https://content-security-policy.com/</p><p>https://github.com/HtmlUnit/htmlunit-csp</p><p>https://developers.google.com/web/fundamentals/security/csp#policy_applies_to_a_wide_variety_of_resources</p>","cweid":"693","wascid":"15","sourceid":"8"},{"pluginid":"10055","alertRef":"10055-5","alert":"CSP: script-src unsafe-inline","name":"CSP: script-src unsafe-inline","riskcode":"2","confidence":"3","riskdesc":"Medium (High)","desc":"<p>Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks. Including (but not limited to) Cross Site Scripting (XSS), and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page — covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.</p>","instances":[{"uri":"https://www.avekshaa.com/","method":"GET","param":"content-security-policy","attack":"","evidence":"upgrade-insecure-requests","otherinfo":"script-src includes unsafe-inline."},{"uri":"https://www.avekshaa.com/robots.txt","method":"GET","param":"content-security-policy","attack":"","evidence":"upgrade-insecure-requests","otherinfo":"script-src includes unsafe-inline."},{"uri":"https://www.avekshaa.com/sitemap.xml","method":"GET","param":"content-security-policy","attack":"","evidence":"upgrade-insecure-requests","otherinfo":"script-src includes unsafe-inline."}],"count":"3","solution":"<p>Ensure that your web server, application server, load balancer, etc. is properly configured to set the Content-Security-Policy header.</p>","otherinfo":"<p>script-src includes unsafe-inline.</p>","reference":"<p>https://www.w3.org/TR/CSP/</p><p>https://caniuse.com/#search=content+security+policy</p><p>https://content-security-policy.com/</p><p>https://github.com/HtmlUnit/htmlunit-csp</p><p>https://developers.google.com/web/fundamentals/security/csp#policy_applies_to_a_wide_variety_of_resources</p>","cweid":"693","wascid":"15","sourceid":"8"},{"pluginid":"10055","alertRef":"10055-6","alert":"CSP: style-src unsafe-inline","name":"CSP: style-src unsafe-inline","riskcode":"2","confidence":"3","riskdesc":"Medium (High)","desc":"<p>Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks. Including (but not limited to) Cross Site Scripting (XSS), and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page — covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.</p>","instances":[{"uri":"https://www.avekshaa.com/","method":"GET","param":"content-security-policy","attack":"","evidence":"upgrade-insecure-requests","otherinfo":"style-src includes unsafe-inline."},{"uri":"https://www.avekshaa.com/robots.txt","method":"GET","param":"content-security-policy","attack":"","evidence":"upgrade-insecure-requests","otherinfo":"style-src includes unsafe-inline."},{"uri":"https://www.avekshaa.com/sitemap.xml","method":"GET","param":"content-security-policy","attack":"","evidence":"upgrade-insecure-requests","otherinfo":"style-src includes unsafe-inline."}],"count":"3","solution":"<p>Ensure that your web server, application server, load balancer, etc. is properly configured to set the Content-Security-Policy header.</p>","otherinfo":"<p>style-src includes unsafe-inline.</p>","reference":"<p>https://www.w3.org/TR/CSP/</p><p>https://caniuse.com/#search=content+security+policy</p><p>https://content-security-policy.com/</p><p>https://github.com/HtmlUnit/htmlunit-csp</p><p>https://developers.google.com/web/fundamentals/security/csp#policy_applies_to_a_wide_variety_of_resources</p>","cweid":"693","wascid":"15","sourceid":"8"},{"pluginid":"10037","alertRef":"10037","alert":"Server Leaks Information via \"X-Powered-By\" HTTP Response Header Field(s)","name":"Server Leaks Information via \"X-Powered-By\" HTTP Response Header Field(s)","riskcode":"1","confidence":"2","riskdesc":"Low (Medium)","desc":"<p>The web/application server is leaking information via one or more \"X-Powered-By\" HTTP response headers. Access to such information may facilitate attackers identifying other frameworks/components your web application is reliant upon and the vulnerabilities such components may be subject to.</p>","instances":[{"uri":"https://www.avekshaa.com/","method":"GET","param":"","attack":"","evidence":"x-powered-by: PHP/8.1.27","otherinfo":""},{"uri":"https://www.avekshaa.com/robots.txt","method":"GET","param":"","attack":"","evidence":"x-powered-by: PHP/8.1.27","otherinfo":""},{"uri":"https://www.avekshaa.com/sitemap.xml","method":"GET","param":"","attack":"","evidence":"x-powered-by: PHP/8.1.27","otherinfo":""}],"count":"3","solution":"<p>Ensure that your web server, application server, load balancer, etc. is configured to suppress \"X-Powered-By\" headers.</p>","otherinfo":"","reference":"<p>https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/08-Fingerprint_Web_Application_Framework</p><p>https://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html</p>","cweid":"200","wascid":"13","sourceid":"8"},{"pluginid":"10035","alertRef":"10035-1","alert":"Strict-Transport-Security Header Not Set","name":"Strict-Transport-Security Header Not Set","riskcode":"1","confidence":"3","riskdesc":"Low (High)","desc":"<p>HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.</p>","instances":[{"uri":"https://www.avekshaa.com/","method":"GET","param":"","attack":"","evidence":"","otherinfo":""},{"uri":"https://www.avekshaa.com/robots.txt","method":"GET","param":"","attack":"","evidence":"","otherinfo":""},{"uri":"https://www.avekshaa.com/sitemap.xml","method":"GET","param":"","attack":"","evidence":"","otherinfo":""}],"count":"3","solution":"<p>Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.</p>","otherinfo":"","reference":"<p>https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html</p><p>https://owasp.org/www-community/Security_Headers</p><p>https://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security</p><p>https://caniuse.com/stricttransportsecurity</p><p>https://datatracker.ietf.org/doc/html/rfc6797</p>","cweid":"319","wascid":"15","sourceid":"8"},{"pluginid":"10050","alertRef":"10050-2","alert":"Retrieved from Cache","name":"Retrieved from Cache","riskcode":"0","confidence":"2","riskdesc":"Informational (Medium)","desc":"<p>The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance. </p>","instances":[{"uri":"https://www.avekshaa.com/","method":"GET","param":"","attack":"","evidence":"Age: 1930","otherinfo":"The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use."},{"uri":"https://www.avekshaa.com/robots.txt","method":"GET","param":"","attack":"","evidence":"Age: 549","otherinfo":"The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use."}],"count":"2","solution":"<p>Validate that the response does not contain sensitive, personal or user-specific information.  If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:</p><p>Cache-Control: no-cache, no-store, must-revalidate, private</p><p>Pragma: no-cache</p><p>Expires: 0</p><p>This configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.</p>","otherinfo":"<p>The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.</p>","reference":"<p>https://tools.ietf.org/html/rfc7234</p><p>https://tools.ietf.org/html/rfc7231</p><p>https://www.rfc-editor.org/rfc/rfc9110.html</p>","cweid":"-1","wascid":"-1","sourceid":"8"}]},{"@name":"http://www.avekshaa.com","@host":"www.avekshaa.com","@port":"80","@ssl":"false","alerts":[{"pluginid":"10055","alertRef":"10055-4","alert":"CSP: Wildcard Directive","name":"CSP: Wildcard Directive","riskcode":"2","confidence":"3","riskdesc":"Medium (High)","desc":"<p>Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks. Including (but not limited to) Cross Site Scripting (XSS), and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page — covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.</p>","instances":[{"uri":"http://www.avekshaa.com","method":"GET","param":"content-security-policy","attack":"","evidence":"upgrade-insecure-requests","otherinfo":"The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined: \nscript-src, style-src, img-src, connect-src, frame-src, frame-ancestors, font-src, media-src, object-src, manifest-src, worker-src, form-action\n\nThe directive(s): frame-ancestors, form-action are among the directives that do not fallback to default-src, missing/excluding them is the same as allowing anything."},{"uri":"http://www.avekshaa.com/robots.txt","method":"GET","param":"content-security-policy","attack":"","evidence":"upgrade-insecure-requests","otherinfo":"The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined: \nscript-src, style-src, img-src, connect-src, frame-src, frame-ancestors, font-src, media-src, object-src, manifest-src, worker-src, form-action\n\nThe directive(s): frame-ancestors, form-action are among the directives that do not fallback to default-src, missing/excluding them is the same as allowing anything."},{"uri":"http://www.avekshaa.com/sitemap.xml","method":"GET","param":"content-security-policy","attack":"","evidence":"upgrade-insecure-requests","otherinfo":"The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined: \nscript-src, style-src, img-src, connect-src, frame-src, frame-ancestors, font-src, media-src, object-src, manifest-src, worker-src, form-action\n\nThe directive(s): frame-ancestors, form-action are among the directives that do not fallback to default-src, missing/excluding them is the same as allowing anything."}],"count":"3","solution":"<p>Ensure that your web server, application server, load balancer, etc. is properly configured to set the Content-Security-Policy header.</p>","otherinfo":"<p>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined: </p><p>script-src, style-src, img-src, connect-src, frame-src, frame-ancestors, font-src, media-src, object-src, manifest-src, worker-src, form-action</p><p></p><p>The directive(s): frame-ancestors, form-action are among the directives that do not fallback to default-src, missing/excluding them is the same as allowing anything.</p>","reference":"<p>https://www.w3.org/TR/CSP/</p><p>https://caniuse.com/#search=content+security+policy</p><p>https://content-security-policy.com/</p><p>https://github.com/HtmlUnit/htmlunit-csp</p><p>https://developers.google.com/web/fundamentals/security/csp#policy_applies_to_a_wide_variety_of_resources</p>","cweid":"693","wascid":"15","sourceid":"4"},{"pluginid":"10055","alertRef":"10055-5","alert":"CSP: script-src unsafe-inline","name":"CSP: script-src unsafe-inline","riskcode":"2","confidence":"3","riskdesc":"Medium (High)","desc":"<p>Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks. Including (but not limited to) Cross Site Scripting (XSS), and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page — covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.</p>","instances":[{"uri":"http://www.avekshaa.com","method":"GET","param":"content-security-policy","attack":"","evidence":"upgrade-insecure-requests","otherinfo":"script-src includes unsafe-inline."},{"uri":"http://www.avekshaa.com/robots.txt","method":"GET","param":"content-security-policy","attack":"","evidence":"upgrade-insecure-requests","otherinfo":"script-src includes unsafe-inline."},{"uri":"http://www.avekshaa.com/sitemap.xml","method":"GET","param":"content-security-policy","attack":"","evidence":"upgrade-insecure-requests","otherinfo":"script-src includes unsafe-inline."}],"count":"3","solution":"<p>Ensure that your web server, application server, load balancer, etc. is properly configured to set the Content-Security-Policy header.</p>","otherinfo":"<p>script-src includes unsafe-inline.</p>","reference":"<p>https://www.w3.org/TR/CSP/</p><p>https://caniuse.com/#search=content+security+policy</p><p>https://content-security-policy.com/</p><p>https://github.com/HtmlUnit/htmlunit-csp</p><p>https://developers.google.com/web/fundamentals/security/csp#policy_applies_to_a_wide_variety_of_resources</p>","cweid":"693","wascid":"15","sourceid":"4"},{"pluginid":"10055","alertRef":"10055-6","alert":"CSP: style-src unsafe-inline","name":"CSP: style-src unsafe-inline","riskcode":"2","confidence":"3","riskdesc":"Medium (High)","desc":"<p>Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks. Including (but not limited to) Cross Site Scripting (XSS), and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page — covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.</p>","instances":[{"uri":"http://www.avekshaa.com","method":"GET","param":"content-security-policy","attack":"","evidence":"upgrade-insecure-requests","otherinfo":"style-src includes unsafe-inline."},{"uri":"http://www.avekshaa.com/robots.txt","method":"GET","param":"content-security-policy","attack":"","evidence":"upgrade-insecure-requests","otherinfo":"style-src includes unsafe-inline."},{"uri":"http://www.avekshaa.com/sitemap.xml","method":"GET","param":"content-security-policy","attack":"","evidence":"upgrade-insecure-requests","otherinfo":"style-src includes unsafe-inline."}],"count":"3","solution":"<p>Ensure that your web server, application server, load balancer, etc. is properly configured to set the Content-Security-Policy header.</p>","otherinfo":"<p>style-src includes unsafe-inline.</p>","reference":"<p>https://www.w3.org/TR/CSP/</p><p>https://caniuse.com/#search=content+security+policy</p><p>https://content-security-policy.com/</p><p>https://github.com/HtmlUnit/htmlunit-csp</p><p>https://developers.google.com/web/fundamentals/security/csp#policy_applies_to_a_wide_variety_of_resources</p>","cweid":"693","wascid":"15","sourceid":"4"},{"pluginid":"10044","alertRef":"10044-1","alert":"Big Redirect Detected (Potential Sensitive Information Leak)","name":"Big Redirect Detected (Potential Sensitive Information Leak)","riskcode":"1","confidence":"2","riskdesc":"Low (Medium)","desc":"<p>The server has responded with a redirect that seems to provide a large response. This may indicate that although the server sent a redirect it also responded with body content (which may include sensitive details, PII, etc.).</p>","instances":[{"uri":"http://www.avekshaa.com","method":"GET","param":"","attack":"","evidence":"","otherinfo":"Location header URI length: 25 [https://www.avekshaa.com/].\nPredicted response size: 325.\nResponse Body Length: 795."},{"uri":"http://www.avekshaa.com/robots.txt","method":"GET","param":"","attack":"","evidence":"","otherinfo":"Location header URI length: 35 [https://www.avekshaa.com/robots.txt].\nPredicted response size: 335.\nResponse Body Length: 795."},{"uri":"http://www.avekshaa.com/sitemap.xml","method":"GET","param":"","attack":"","evidence":"","otherinfo":"Location header URI length: 36 [https://www.avekshaa.com/sitemap.xml].\nPredicted response size: 336.\nResponse Body Length: 795."}],"count":"3","solution":"<p>Ensure that no sensitive information is leaked via redirect responses. Redirect responses should have almost no content.</p>","otherinfo":"<p>Location header URI length: 25 [https://www.avekshaa.com/].</p><p>Predicted response size: 325.</p><p>Response Body Length: 795.</p>","reference":"","cweid":"201","wascid":"13","sourceid":"4"},{"pluginid":"10050","alertRef":"10050-2","alert":"Retrieved from Cache","name":"Retrieved from Cache","riskcode":"0","confidence":"2","riskdesc":"Informational (Medium)","desc":"<p>The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance. </p>","instances":[{"uri":"http://www.avekshaa.com","method":"GET","param":"","attack":"","evidence":"Age: 38","otherinfo":"The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use."},{"uri":"http://www.avekshaa.com/robots.txt","method":"GET","param":"","attack":"","evidence":"Age: 48","otherinfo":"The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use."},{"uri":"http://www.avekshaa.com/sitemap.xml","method":"GET","param":"","attack":"","evidence":"Age: 535","otherinfo":"The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use."}],"count":"3","solution":"<p>Validate that the response does not contain sensitive, personal or user-specific information.  If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:</p><p>Cache-Control: no-cache, no-store, must-revalidate, private</p><p>Pragma: no-cache</p><p>Expires: 0</p><p>This configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.</p>","otherinfo":"<p>The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.</p>","reference":"<p>https://tools.ietf.org/html/rfc7234</p><p>https://tools.ietf.org/html/rfc7231</p><p>https://www.rfc-editor.org/rfc/rfc9110.html</p>","cweid":"-1","wascid":"-1","sourceid":"4"}]}]}